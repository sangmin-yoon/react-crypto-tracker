{"version":3,"sources":["api.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","Chart","coinId","isDark","useQuery","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","refetchInterval","isLoading","data","type","series","name","map","price","x","time_open","y","close","high","low","open","options","theme","mode","chart","height","width","toolbar","show","background","xaxis","axisBorder","yaxis","grid","PriceWrapper","styled","div","PriceItem","props","cardBgColor","porps","textColor","Price","state","useLocation","marketcap","sevenP","dayP","volume","Container","Header","Title","h1","accentColor","Loader","span","Img","img","Overview","OverviewItem","Description","p","Tabs","Tab","isActive","BackBtn","Coin","useParams","priceMatch","useRouteMatch","chartMatch","back","useHistory","fetchCoinInfo","infoLoading","infoData","fetchCoinTickers","tickersLoading","tickersData","loading","Helmet","onClick","push","src","symbol","toLowerCase","rank","quotes","USD","toFixed","description","total_supply","max_supply","to","pathname","percent_change_7d","percent_change_24h","volume_24h","market_cap","path","CoinsList","ul","li","Coins","toggleDark","slice","coin","id","Router","darkTheme","bgColor","lightTheme","GlobalStyle","createGlobalStyle","App","useState","setIsDark","current","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.6d44d20d.chunk.js","sourcesContent":["const BASE_URL = \"https://api.coinpaprika.com/v1\";\n\nexport function fetchCoins() {\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\n}\n\nexport function fetchCoinInfo(coinId: string) {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinTickers(coinId: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinHistory(coinId: string) {\n  const endDate = Math.floor(Date.now() / 1000);\n  const startDate = endDate - 60 * 60 * 24 * 7 * 3;\n  return fetch(\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\n  ).then((response) => response.json());\n}\n","import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\n\ninterface CharProps {\n  coinId: string;\n  isDark: boolean;\n}\n\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\n// close, high, low, open\nfunction Chart({ coinId, isDark }: CharProps) {\n  const { isLoading, data } = useQuery<IHistorical[]>(\n    [\"ohlcv\", coinId],\n    () => fetchCoinHistory(coinId),\n    {\n      refetchInterval: 10000,\n    }\n  );\n\n  return (\n    <div>\n      {isLoading ? (\n        \"차트 로딩중...\"\n      ) : (\n        <ApexChart\n          type=\"candlestick\"\n          series={[\n            {\n              name: \"price\",\n              data: data?.map((price) => {\n                return {\n                  x: price.time_open,\n                  y: [price.close, price.high, price.low, price.open],\n                };\n              }),\n            },\n          ]}\n          options={{\n            theme: {\n              mode: isDark ? \"dark\" : \"light\",\n            },\n            chart: {\n              height: 300,\n              width: 500,\n              toolbar: {\n                show: false,\n              },\n              background: \"transparent\",\n            },\n            xaxis: {\n              type: \"datetime\",\n              axisBorder: { show: false },\n            },\n            yaxis: {\n              show: false,\n            },\n            grid: {\n              show: false,\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Chart;\n","import { useLocation } from \"react-router\";\nimport styled from \"styled-components\";\n\nconst PriceWrapper = styled.div`\n  height: 100%;\n`;\n\nconst PriceItem = styled.div`\n  padding: 15px;\n  background-color: ${(props) => props.theme.cardBgColor};\n  color: ${(porps) => porps.theme.textColor};\n  margin-bottom: 10px;\n  border-radius: 7px;\n  display: flex;\n  justify-content: space-between;\n  span {\n    font-size: 15px;\n    &:last-child {\n      font-weight: bold;\n    }\n  }\n`;\n\ninterface RouteState {\n  dayP: number;\n  sevenP: number;\n  volume: number;\n  marketcap: number;\n}\n\nfunction Price() {\n  const { state } = useLocation<RouteState>();\n\n  return (\n    <PriceWrapper>\n      <PriceItem>\n        <span>시가총액</span>\n        <span> $ {state.marketcap}</span>\n      </PriceItem>\n      <PriceItem>\n        <span>7일간 변동률</span>\n        <span> {state.sevenP} %</span>\n      </PriceItem>\n      <PriceItem>\n        <span>24시간 변동률</span>\n        <span> {state.dayP} %</span>\n      </PriceItem>\n      <PriceItem>\n        <span>24시간 거래량</span>\n        <span> $ {state.volume}</span>\n      </PriceItem>\n    </PriceWrapper>\n  );\n}\n\nexport default Price;\n","import { useQuery } from \"react-query\";\nimport { Helmet } from \"react-helmet\";\nimport {\n  Route,\n  Switch,\n  useHistory,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\nimport Chart from \"./Chart\";\nimport Price from \"./Price\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.div`\n  height: 10vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n`;\n\nconst Title = styled.h1`\n  color: ${(props) => props.theme.accentColor};\n  font-size: 50px;\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Img = styled.img`\n  width: 40px;\n  height: 40px;\n  margin-right: 10px;\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: ${(props) => props.theme.cardBgColor};\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\n\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\n\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: ${(props) => props.theme.cardBgColor};\n  padding: 7px 0px;\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n\n  a {\n    display: block;\n    transition: color 0.3s ease-in-out;\n  }\n`;\n\nconst BackBtn = styled.span`\n  position: absolute;\n  left: 0;\n  font-size: 25px;\n  transition: color 0.1s ease-in-out;\n  &:hover {\n    cursor: pointer;\n    color: ${(props) => props.theme.accentColor};\n  }\n`;\n\ninterface RouteState {\n  name: string;\n  symbol: string;\n}\n\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  contract: string;\n  platform: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\n\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\ninterface ICoinProps {\n  isDark: boolean;\n}\n\nfunction Coin({ isDark }: ICoinProps) {\n  const { coinId } = useParams<{ coinId: string }>();\n  const { state } = useLocation<RouteState>();\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\n  const back = useHistory();\n\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n    [\"info\", coinId],\n    () => fetchCoinInfo(coinId)\n  );\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n    [\"tickers\", coinId],\n    () => fetchCoinTickers(coinId),\n    {\n      refetchInterval: 5000,\n    }\n  );\n\n  const loading = infoLoading || tickersLoading;\n\n  return (\n    <Container>\n      <Helmet>\n        <title>\n          {state?.name ? state.name : loading ? \"Loadig...\" : infoData?.name}\n        </title>\n      </Helmet>\n      <Header>\n        <BackBtn onClick={() => back.push(\"/\")}>&larr;</BackBtn>\n        <Title>\n          <Img\n            src={`https://cryptoicon-api.vercel.app/api/icon/${infoData?.symbol.toLowerCase()}`}\n          />\n          {state?.name ? state.name : loading ? \"Loadig...\" : infoData?.name}\n        </Title>\n      </Header>\n      {loading ? (\n        <Loader>로딩중....</Loader>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>{infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Price:</span>\n              <span>${tickersData?.quotes.USD.price.toFixed(3)}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{infoData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Suply:</span>\n              <span>{tickersData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Suply:</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/${coinId}/chart`}>chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link\n                to={{\n                  pathname: `/${coinId}/price`,\n                  state: {\n                    sevenP: tickersData?.quotes.USD.percent_change_7d,\n                    dayP: tickersData?.quotes.USD.percent_change_24h,\n                    volume: tickersData?.quotes.USD.volume_24h,\n                    marketcap: tickersData?.quotes.USD.market_cap,\n                  },\n                }}\n              >\n                price\n              </Link>\n            </Tab>\n          </Tabs>\n\n          <Switch>\n            <Route path={`/:coinId/price`}>\n              <Price />\n            </Route>\n            <Route path={`/:coinId/chart`}>\n              <Chart coinId={coinId} isDark={isDark} />\n            </Route>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n}\n\nexport default Coin;\n","import { Helmet } from \"react-helmet\";\nimport { useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoins } from \"../api\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.div`\n  height: 10vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  button {\n    all: unset;\n    position: absolute;\n    right: 0;\n    font-size: 30px;\n    cursor: pointer;\n  }\n`;\n\nconst CoinsList = styled.ul``;\n\nconst Coin = styled.li`\n  background-color: ${(props) => props.theme.cardBgColor};\n  color: ${(props) => props.theme.textColor};\n  border-radius: 15px;\n  margin-bottom: 10px;\n  a {\n    display: flex;\n    align-items: center;\n    padding: 20px;\n    transition: color 0.1s ease-in-out;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\n\nconst Title = styled.h1`\n  color: ${(props) => props.theme.accentColor};\n  font-size: 50px;\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\n\ninterface ICoin {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\ninterface ICoinsProps {\n  toggleDark: () => void;\n  isDark: boolean;\n}\n\nfunction Coins({ toggleDark, isDark }: ICoinsProps) {\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\n\n  return (\n    <Container>\n      <Helmet>\n        <title>GAZUA</title>\n      </Helmet>\n      <Header>\n        <Title>GAZUA</Title>\n        <button onClick={toggleDark}>{isDark ? \"🌞\" : \"🌚\"}</button>\n      </Header>\n      {isLoading ? (\n        <Loader>로딩중....</Loader>\n      ) : (\n        <CoinsList>\n          {data?.slice(0, 50).map((coin) => (\n            <Coin key={coin.id}>\n              <Link\n                to={{\n                  pathname: `/${coin.id}`,\n                  state: { name: coin.name, symbol: coin.symbol },\n                }}\n              >\n                <Img\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                />\n                {coin.name} &rarr;{\" \"}\n              </Link>\n            </Coin>\n          ))}\n        </CoinsList>\n      )}\n    </Container>\n  );\n}\n\nexport default Coins;\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Coin from \"./routes/Coin\";\nimport Coins from \"./routes/Coins\";\n\ninterface IRouterProps {\n  toggleDark: () => void;\n  isDark: boolean;\n}\n\nfunction Router({ toggleDark, isDark }: IRouterProps) {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/:coinId\">\n          <Coin isDark={isDark} />\n        </Route>\n        <Route path=\"/\">\n          <Coins toggleDark={toggleDark} isDark={isDark} />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default Router;\n","import { DefaultTheme } from \"styled-components\";\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: \"#222f3e\",\n  textColor: \"#c8d6e5\",\n  accentColor: \"#0abde3\",\n  cardBgColor: \"rgba(0, 0, 0, 0.5)\",\n};\n\nexport const lightTheme: DefaultTheme = {\n  bgColor: \"#c8d6e5\",\n  textColor: \"#222f3e\",\n  accentColor: \"#0abde3\",\n  cardBgColor: \"white\",\n};\n","import { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { darkTheme, lightTheme } from \"./theme\";\nimport { useState } from \"react\";\n\nconst GlobalStyle = createGlobalStyle`\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n* {\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: \"Source Sans Pro\", sans-serif;\n  background-color: ${(props) => props.theme.bgColor};\n  color: ${(props) => props.theme.textColor}\n}\n\na{\n text-decoration : none;\n color:inherit;\n}\n\n`;\n\nfunction App() {\n  const [isDark, setIsDark] = useState(false);\n  const toggleDark = () => {\n    setIsDark((current) => !current);\n  };\n  return (\n    <>\n      <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\n        <GlobalStyle />\n        <Router toggleDark={toggleDark} isDark={isDark} />\n        <ReactQueryDevtools initialIsOpen={true} />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <App />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}